plugins {
    id 'java-library'
}

repositories {
    jcenter()
}

dependencies {
    // https://mvnrepository.com/artifact/org.testng/testng
	testImplementation group: 'org.testng', name: 'testng', version: '6.14.3'
	
	// https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java
	compile group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '3.141.59'
	
    // https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-support
	compile group: 'org.seleniumhq.selenium', name: 'selenium-support', version: '3.141.59'
    
    // https://mvnrepository.com/artifact/io.github.bonigarcia/webdrivermanager
	implementation group: 'io.github.bonigarcia', name: 'webdrivermanager', version: '4.3.1'
    
    // https://mvnrepository.com/artifact/org.uncommons/reportng
	compile group: 'org.uncommons', name: 'reportng', version: '1.1.4'
    
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
	implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.12.1'

	// https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core
	implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.12.1'

    // https://mvnrepository.com/artifact/com.aventstack/extentreports
	compile group: 'com.aventstack', name: 'extentreports', version: '4.0.9'
    
    // https://mvnrepository.com/artifact/joda-time/joda-time
	compile group: 'joda-time', name: 'joda-time', version: '2.0'
    
    // https://mvnrepository.com/artifact/log4j/log4j
	compile group: 'log4j', name: 'log4j', version: '1.2.16'
	
	// https://mvnrepository.com/artifact/org.slf4j/slf4j-api
	compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.24'
	
	// https://mvnrepository.com/artifact/velocity/velocity-dep
	compile group: 'velocity', name: 'velocity-dep', version: '1.4'
	
	// https://mvnrepository.com/artifact/com.google.inject/guice
	compile group: 'com.google.inject', name: 'guice', version: '4.1.0'
	
	// https://mvnrepository.com/artifact/commons-logging/commons-logging
	compile group: 'commons-logging', name: 'commons-logging', version: '1.2'
	
    // https://mvnrepository.com/artifact/com.github.javafaker/javafaker
	compile group: 'com.github.javafaker', name: 'javafaker', version: '1.0.2'
	
	// https://mvnrepository.com/artifact/com.oracle.database.jdbc/ojdbc8
	implementation group: 'com.oracle.database.jdbc', name: 'ojdbc8', version: '19.7.0.0'
	
}
compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"



test {
	useTestNG(){
        suites 'src/test/resources/runTestCase.xml'
        outputDirectory = file("$projectDir/report-output")
    }
    
    testLogging {
        showStandardStreams = true
    }
    
    reports.html.setDestination(file("$projectDir/gradle-output"))
}

task smokeTests(type: Test) { 
   useTestNG() {
       useDefaultListeners = true
       suites 'src/test/resources/runTestCase.xml'
       includeGroups 'smoke'
   }
}
